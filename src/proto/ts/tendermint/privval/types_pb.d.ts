// @generated by protoc-gen-es v1.0.0
// @generated from file tendermint/privval/types.proto (package tendermint.privval, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message as Message$1, proto3 } from "@bufbuild/protobuf";
import type { PublicKey } from "../crypto/keys_pb.js";
import type { Proposal, Vote } from "../types/types_pb.js";

/**
 * @generated from enum tendermint.privval.Errors
 */
export declare enum Errors {
  /**
   * @generated from enum value: ERRORS_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: ERRORS_UNEXPECTED_RESPONSE = 1;
   */
  UNEXPECTED_RESPONSE = 1,

  /**
   * @generated from enum value: ERRORS_NO_CONNECTION = 2;
   */
  NO_CONNECTION = 2,

  /**
   * @generated from enum value: ERRORS_CONNECTION_TIMEOUT = 3;
   */
  CONNECTION_TIMEOUT = 3,

  /**
   * @generated from enum value: ERRORS_READ_TIMEOUT = 4;
   */
  READ_TIMEOUT = 4,

  /**
   * @generated from enum value: ERRORS_WRITE_TIMEOUT = 5;
   */
  WRITE_TIMEOUT = 5,
}

/**
 * @generated from message tendermint.privval.RemoteSignerError
 */
export declare class RemoteSignerError extends Message$1<RemoteSignerError> {
  /**
   * @generated from field: int32 code = 1;
   */
  code: number;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  constructor(data?: PartialMessage<RemoteSignerError>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.RemoteSignerError";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoteSignerError;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoteSignerError;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoteSignerError;

  static equals(a: RemoteSignerError | PlainMessage<RemoteSignerError> | undefined, b: RemoteSignerError | PlainMessage<RemoteSignerError> | undefined): boolean;
}

/**
 * PubKeyRequest requests the consensus public key from the remote signer.
 *
 * @generated from message tendermint.privval.PubKeyRequest
 */
export declare class PubKeyRequest extends Message$1<PubKeyRequest> {
  /**
   * @generated from field: string chain_id = 1;
   */
  chainId: string;

  constructor(data?: PartialMessage<PubKeyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.PubKeyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PubKeyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PubKeyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PubKeyRequest;

  static equals(a: PubKeyRequest | PlainMessage<PubKeyRequest> | undefined, b: PubKeyRequest | PlainMessage<PubKeyRequest> | undefined): boolean;
}

/**
 * PubKeyResponse is a response message containing the public key.
 *
 * @generated from message tendermint.privval.PubKeyResponse
 */
export declare class PubKeyResponse extends Message$1<PubKeyResponse> {
  /**
   * @generated from field: tendermint.crypto.PublicKey pub_key = 1;
   */
  pubKey?: PublicKey;

  /**
   * @generated from field: tendermint.privval.RemoteSignerError error = 2;
   */
  error?: RemoteSignerError;

  constructor(data?: PartialMessage<PubKeyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.PubKeyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PubKeyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PubKeyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PubKeyResponse;

  static equals(a: PubKeyResponse | PlainMessage<PubKeyResponse> | undefined, b: PubKeyResponse | PlainMessage<PubKeyResponse> | undefined): boolean;
}

/**
 * SignVoteRequest is a request to sign a vote
 *
 * @generated from message tendermint.privval.SignVoteRequest
 */
export declare class SignVoteRequest extends Message$1<SignVoteRequest> {
  /**
   * @generated from field: tendermint.types.Vote vote = 1;
   */
  vote?: Vote;

  /**
   * @generated from field: string chain_id = 2;
   */
  chainId: string;

  constructor(data?: PartialMessage<SignVoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.SignVoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignVoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignVoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignVoteRequest;

  static equals(a: SignVoteRequest | PlainMessage<SignVoteRequest> | undefined, b: SignVoteRequest | PlainMessage<SignVoteRequest> | undefined): boolean;
}

/**
 * SignedVoteResponse is a response containing a signed vote or an error
 *
 * @generated from message tendermint.privval.SignedVoteResponse
 */
export declare class SignedVoteResponse extends Message$1<SignedVoteResponse> {
  /**
   * @generated from field: tendermint.types.Vote vote = 1;
   */
  vote?: Vote;

  /**
   * @generated from field: tendermint.privval.RemoteSignerError error = 2;
   */
  error?: RemoteSignerError;

  constructor(data?: PartialMessage<SignedVoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.SignedVoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignedVoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignedVoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignedVoteResponse;

  static equals(a: SignedVoteResponse | PlainMessage<SignedVoteResponse> | undefined, b: SignedVoteResponse | PlainMessage<SignedVoteResponse> | undefined): boolean;
}

/**
 * SignProposalRequest is a request to sign a proposal
 *
 * @generated from message tendermint.privval.SignProposalRequest
 */
export declare class SignProposalRequest extends Message$1<SignProposalRequest> {
  /**
   * @generated from field: tendermint.types.Proposal proposal = 1;
   */
  proposal?: Proposal;

  /**
   * @generated from field: string chain_id = 2;
   */
  chainId: string;

  constructor(data?: PartialMessage<SignProposalRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.SignProposalRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignProposalRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignProposalRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignProposalRequest;

  static equals(a: SignProposalRequest | PlainMessage<SignProposalRequest> | undefined, b: SignProposalRequest | PlainMessage<SignProposalRequest> | undefined): boolean;
}

/**
 * SignedProposalResponse is response containing a signed proposal or an error
 *
 * @generated from message tendermint.privval.SignedProposalResponse
 */
export declare class SignedProposalResponse extends Message$1<SignedProposalResponse> {
  /**
   * @generated from field: tendermint.types.Proposal proposal = 1;
   */
  proposal?: Proposal;

  /**
   * @generated from field: tendermint.privval.RemoteSignerError error = 2;
   */
  error?: RemoteSignerError;

  constructor(data?: PartialMessage<SignedProposalResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.SignedProposalResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignedProposalResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignedProposalResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignedProposalResponse;

  static equals(a: SignedProposalResponse | PlainMessage<SignedProposalResponse> | undefined, b: SignedProposalResponse | PlainMessage<SignedProposalResponse> | undefined): boolean;
}

/**
 * PingRequest is a request to confirm that the connection is alive.
 *
 * @generated from message tendermint.privval.PingRequest
 */
export declare class PingRequest extends Message$1<PingRequest> {
  constructor(data?: PartialMessage<PingRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.PingRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PingRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PingRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PingRequest;

  static equals(a: PingRequest | PlainMessage<PingRequest> | undefined, b: PingRequest | PlainMessage<PingRequest> | undefined): boolean;
}

/**
 * PingResponse is a response to confirm that the connection is alive.
 *
 * @generated from message tendermint.privval.PingResponse
 */
export declare class PingResponse extends Message$1<PingResponse> {
  constructor(data?: PartialMessage<PingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.PingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PingResponse;

  static equals(a: PingResponse | PlainMessage<PingResponse> | undefined, b: PingResponse | PlainMessage<PingResponse> | undefined): boolean;
}

/**
 * @generated from message tendermint.privval.Message
 */
export declare class Message extends Message$1<Message> {
  /**
   * @generated from oneof tendermint.privval.Message.sum
   */
  sum: {
    /**
     * @generated from field: tendermint.privval.PubKeyRequest pub_key_request = 1;
     */
    value: PubKeyRequest;
    case: "pubKeyRequest";
  } | {
    /**
     * @generated from field: tendermint.privval.PubKeyResponse pub_key_response = 2;
     */
    value: PubKeyResponse;
    case: "pubKeyResponse";
  } | {
    /**
     * @generated from field: tendermint.privval.SignVoteRequest sign_vote_request = 3;
     */
    value: SignVoteRequest;
    case: "signVoteRequest";
  } | {
    /**
     * @generated from field: tendermint.privval.SignedVoteResponse signed_vote_response = 4;
     */
    value: SignedVoteResponse;
    case: "signedVoteResponse";
  } | {
    /**
     * @generated from field: tendermint.privval.SignProposalRequest sign_proposal_request = 5;
     */
    value: SignProposalRequest;
    case: "signProposalRequest";
  } | {
    /**
     * @generated from field: tendermint.privval.SignedProposalResponse signed_proposal_response = 6;
     */
    value: SignedProposalResponse;
    case: "signedProposalResponse";
  } | {
    /**
     * @generated from field: tendermint.privval.PingRequest ping_request = 7;
     */
    value: PingRequest;
    case: "pingRequest";
  } | {
    /**
     * @generated from field: tendermint.privval.PingResponse ping_response = 8;
     */
    value: PingResponse;
    case: "pingResponse";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Message>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.privval.Message";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Message;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Message;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Message;

  static equals(a: Message | PlainMessage<Message> | undefined, b: Message | PlainMessage<Message> | undefined): boolean;
}


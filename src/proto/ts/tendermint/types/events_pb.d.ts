// @generated by protoc-gen-es v1.0.0
// @generated from file tendermint/types/events.proto (package tendermint.types, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message tendermint.types.EventDataRoundState
 */
export declare class EventDataRoundState extends Message<EventDataRoundState> {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: int32 round = 2;
   */
  round: number;

  /**
   * @generated from field: string step = 3;
   */
  step: string;

  constructor(data?: PartialMessage<EventDataRoundState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tendermint.types.EventDataRoundState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventDataRoundState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventDataRoundState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventDataRoundState;

  static equals(a: EventDataRoundState | PlainMessage<EventDataRoundState> | undefined, b: EventDataRoundState | PlainMessage<EventDataRoundState> | undefined): boolean;
}

